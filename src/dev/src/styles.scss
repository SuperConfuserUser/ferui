@import '~highlight.js/styles/a11y-dark.css';

@import 'scss/functions';
@import 'scss/mixins';
@import 'scss/variables';

html {
  // On really huge screens (like mine 3008x1600) the font-size of 16px is too small.
  // I've added this rule only for giant screens (when the width is 2800px or above).
  // On other screens, there shouldn't be any changes.
  @include media-breakpoint-up(giant) {
    font-size: 18px !important;
  }
}

.fui-sidebar {
  position: -webkit-sticky;
  position: sticky;
  top: 3rem;
  z-index: $zindex-sticky;
  background-color: $white;

  @include media-breakpoint-up(lg) {
    height: calc(100vh - 3rem);
  }

  @include media-breakpoint-down(md) {
    height: auto;
    border-bottom: 1px solid $gray-300;
  }

  .fui-search {
    padding-left: 30px !important;

    input {
      -webkit-appearance: none;
      -moz-appearance: none;
      border: none;
    }
  }

  .demo-sidebar-menu {
    padding: 0 20px;

    .nav-pills,
    .nav-link {
      color: #252a3a;
      text-transform: capitalize;

      .fui-icon-caret {
        fill: #252a3a;
        transform: rotate(90deg);
        width: 9px;
        height: 9px;
        margin-top: -3px;
      }
    }

    .nav-pills .nav-link.active {
      color: #03a6ff;
      background: transparent;

      .fui-icon-caret {
        fill: #03a6ff;
        transform: rotate(180deg);
      }
    }

    .nav-link {
      padding: 0.3rem 0.7rem;
    }

    > ul ul {
      display: block;
      overflow: hidden;
      height: 0;
      list-style-type: none;
      padding-left: map-get($spacers, 3);
    }

    .nav-link.active + ul {
      height: auto;
      padding-left: map-get($spacers, 4);
    }
  }
}

.fui-navbar {
  position: sticky;
  top: 0;
  z-index: $zindex-sticky;
  max-height: 3rem;
  height: 3rem;
}

.hljs {
  padding: map-get($spacers, 2);
}

.footer {
  padding: map-get($spacers, 4) 0;
  border-top: 1px solid $gray-300;

  .btn:not(:first-child) {
    margin-left: map-get($spacers, 2);
  }
}

pre {
  max-width: 1200px;
  max-height: 600px;
}

.fui-datagrid-demo-action-btn {
  color: $gray-500;
  font-size: $font-size-sm;
  font-weight: $font-weight-bold;
  letter-spacing: 0;

  &:focus {
    box-shadow: none !important;
  }

  .dropdown-icon {
    margin-left: 3px;
    fill: $gray-500;
    width: 9px;
    height: 9px;
  }

  &:hover,
  .active {
    color: $gray-900;

    .dropdown-icon {
      fill: $gray-900;
    }
  }
}

.datagrid-treeview-example {
  .fui-datagrid {
    // Filter
    &.fui-datagrid-has-filter {
      .fui-datagrid-filters {
        border-top: none !important;
        border-radius: 0 !important;
      }
    }

    &:not(.fui-datagrid-has-filter) {
      .fui-datagrid-root-wrapper {
        border-top: none !important;
        border-radius: 0 !important;
      }
    }

    // Pager
    &.fui-datagrid-has-pager {
      .fui-datagrid-pager {
        border-bottom: none !important;
        border-radius: 0 !important;
      }
    }

    &:not(.fui-datagrid-has-pager) {
      .fui-datagrid-root-wrapper {
        border-bottom: none !important;
        border-radius: 0 !important;
      }
    }
  }
}

.demo-component {
  display: block;
  box-sizing: border-box;
  padding: map-get($spacers, 3); // 15px
  margin-bottom: map-get($spacers, 4); // 20px
  border: 1px solid $gray-300;
  @include border-radius(3px);

  .row {
    margin: 0 !important;
  }

  .demo-component-models {
    pre {
      margin: map-get($spacers, 3) 0 0 0 !important;
    }
  }

  .demo-component-header {
    padding: map-get($spacers, 2) 0 map-get($spacers, 4) 0;
    border-bottom: 1px solid $gray-300;
    margin-bottom: map-get($spacers, 3) !important;

    .btn-icon {
      clr-icon {
        width: 20px;
        height: 20px;
      }
    }

    .actions-wrapper {
      // We're using the flex row-reverse. So the last element is actually the first one
      .btn:not(:first-of-type) {
        margin-right: map-get($spacers, 2);
      }
    }
  }
}

.bd-example {
  padding: map-get($spacers, 4); // 20px
  border: 1px solid $gray-300;
  border-radius: $border-radius;
  background: $gray-100;

  .btn {
    margin: 0.3125rem 0.3125rem 0.3125rem 0;
  }

  .btn-group {
    .btn {
      margin: 0.25rem 0;
    }
  }
}

* {
  > .anchor-link {
    font-size: inherit;
    color: $blue;
    cursor: pointer;

    opacity: 0;
    visibility: hidden;
  }

  &:hover > .anchor-link {
    opacity: 0.5;
    visibility: visible;

    &:hover {
      opacity: 1;
      text-decoration: none;
    }
  }

  .fui-helper {
    color: $gray-500;
    &:hover,
    &:focus {
      color: $gray-900;
    }
  }
}

ul ul,
ol ol,
ol ul,
ul ol {
  list-style-type: lower-alpha;
  padding-left: map-get($spacers, 3);
}

.fui-datagrid {
  .test-string-header {
    background-color: darken(desaturate(#ebdab4, 15.33), 10.08);
    color: $gray-900;
  }
  .test-array-header-1 {
    background-color: darken(desaturate(#1979a9, 15.33), 10.08);
  }
  .test-array-header-2 {
    color: $gray-200;
    font-weight: $font-weight-bold;
  }
  .test-function-header {
    background-color: darken(desaturate(#b97455, 15.33), 10.08);
    color: $gray-100;
  }
  .test-default-header-class {
    background-color: darken(desaturate(#d6d32c, 15.33), 10.08);
    color: $gray-100;
  }

  .test-string-cell {
    background-color: #ebdab4;
    color: $gray-900;
  }
  .test-array-cell-1 {
    background-color: #1979a9;
  }
  .test-array-cell-2 {
    color: $gray-200;
    font-weight: $font-weight-bold;
  }
  .test-function-cell {
    background-color: #b97455;
    color: $gray-100;
    font-weight: $font-weight-bold;
  }
  .test-default-cell-class {
    background-color: #d6d32c;
    color: $gray-900;
  }
}
